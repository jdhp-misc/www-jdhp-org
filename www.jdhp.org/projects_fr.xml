<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="xslt/pages.xslt" ?>

<!--
    Semantic JDHP
    Copyright (c) 2011 Jérémie DECOCK (http://www.jdhp.org)
-->

<page xmlns:xi="http://www.w3.org/2001/XInclude" lang="fr" id="projects">

    <xi:include href="common.xml"/>
    <xi:include href="common_fr.xml"/>

    <name>Logiciels</name>

    <keywords>jdhp, robotique, programmation, logiciel, python, java, debian</keywords>

    <desc>
        Cette page contient certains de mes projets et travaux
        <a href="http://fr.wikipedia.org/wiki/Open_source">open source</a> en
        informatique, électronique et robotique.
    </desc>

    <note>
        <!--<p>
            Les URL Git (<em>git://...</em>) peuvent être utilisées pour obtenir les sources de chaque programme :
            <strong>$ git clone git://...</strong>
        </p>-->
        <p>
            Ceci n'est pas une liste exhaustive, de nombreux projets professionnels ne peuvent pas être partagées ici.
        </p>
        <br />
        <p>
            Un référentiel est disponible pour les utilisateurs de <em>Gnu/Linux Debian</em> et d'<em>Ubuntu</em>. 
            Il permet de simplifier l'installation de la plupart des logiciels présentés sur cette page.
            Cliquez <a href="debian_howto_fr">ici</a> pour plus d'informations.
        </p>
    </note>
    
    <!-- ############################################################ -->

    <group id="highlight">
        <label>
            Principaux Projets Open Source
        </label>

        <!-- PYARM -->

        <item id="pyarm" license="MIT">
            <label>PyArm</label>
            <desc>
                Pyarm est un simulateur utilisé dans le cadre d'expériences sur
                l'apprentissage du contrôle moteur humain avec un modèle de bras
                anthropomorphique.
                <br />

                Le modèle physique utilisé est décrit dans <a href="http://www.jdhp.org/dl/pdf/pyarm.pdf">ce rapport technique</a>.
                <br />
                <br />

                Pyarm a été utilisé à l'<a href="http://www.isir.upmc.fr/">Institut des Systèmes Intelligents
                et de Robotique</a> pour conduire des expériences sur les systèmes adaptatifs.
                Ces expériences sont décrites dans l'article suivant <em>"Learning
                cost-efficient control policies with XCSF: generalization capabilities and
                further improvement"</em> par Didier Marin, Jérémie Decock, Lionel Rigoux and Olivier
                Sigaud.
                <br />

                Cette contribution scientifique a été publié dans les
                <em>"Actes de la 13e conférence annuelle sur le calcul génétique et évolutionnaire (GECCO'11)"</em>,
                la principale conférence internationale sur le calcul génétique et évolutionnaire.
                <br />

                Ces expériences ont également été présentées en français aux <em>Sixièmes journées francophones MFI/JFPDA</em>.
                <br />
                
                Ces articles peuvent être téléchargés <a href="http://www.jdhp.org/articles_en.html#XCSF">ici</a>
                pour la version anglaise et <a href="http://www.jdhp.org/articles_fr.html#XCSF">là</a> pour la version française.
            </desc>

            <repository type="github" url="http://github.com/jeremiedecock/pyarm" />

            <download_sources url="http://github.com/jeremiedecock/pyarm/releases" />

            <pdf filename="pyarm.pdf" label="Documentation technique (PDF)" />

            <debian_package filename="pyarm_0.1.3-1_all.deb" arch="all" />

            <video filename="pyarm_generalization.ogv" thumbnail_filename="pyarm_generalization.png">
                <link url="http://www.youtube.com/watch?v=VjaBMbMt5Cw">
                    <label>Regarder sur Youtube</label>
                </link>
            </video>
        </item>

        <!-- BOTSIM -->

        <item id="botsim" license="MIT">
            <label>Botsim.org</label>
            <desc>
                Botsim.org est un simulateur de robots utilisé dans le cadre de
                travaux sur des algorithmes bio-inspirés (apprentissage
                artificiel, algorithmes évolutionnaires, apprentissage par
                renforcement, ...).
                <br />
                <br />

                Nos motivations : utiliser des méthodes bio-inspirées pour
                générer in-silico des formes de vie artificielles originales et
                performantes dans l'accomplissement d'une tache donnée (se
                déplacer, modifier son environnement, survivre, ...).
                <br />
                <br />

                Plus particulièrement, Botsim.org a été écrit pour:
                <ol>
                    <li>reproduire les expériences et les résultats du <a href="http://www.demo.cs.brandeis.edu/golem/">projet Golem</a>:
                        optimiser la morphologie et le contrôle de robots en simulation via des méthodes bio-inspirées (algorithmes évolutionnaires et réseaux de neurones) puis
                        matérialiser ces organismes auto-générés à l'aide d'une imprimante 3D;</li>
                    <li>améliorer le contrôle de robots existants en générant un grand nombre de simulations in-silico;</li>
                    <li>reproduire certaines expériences de l'équipe <a href="http://www.inria.fr/equipes/flowers">Inria Flowers</a> sur la curiosité artificielle.</li>
                </ol>
                <br />

                Botsim.org utilise la bibliothèque opensource Bullet pour
                simuler la physique.
                <br />
                <br />

                Le projet Botsim.org dispose d'un site web dédié à l'adresse suivante :
                <a href="http://www.botsim.org">www.botsim.org</a>.
            </desc>

            <repository type="github" url="http://github.com/jeremiedecock/botsim" />

            <download_sources url="http://github.com/jeremiedecock/botsim/releases" />

            <picture filename="botsim_1.png" thumbnail_filename="botsim_1.png" />
        </item>

        <!-- SNIPPETS -->

        <item id="snippets" license="MIT">
            <label>Snippets</label>
            <desc>
                Une collection de centaines de <em>snippets</em>, c'est à dire
                des petits morceaux de codes que j'ai écrit pour tester un aspect spécifique
                d'un langage de programmation, d'une bibliothèque de
                programmation, d'un format de description, d'un protocole, etc.
                <br />
                Ici vous trouverez des exemples de code pour:
                <dl>
                    <dt>Langages de programmation</dt>
                    <dd>C/C++, Java, Python, scripts Shell, <a href="http://www.gnu.org/software/octave/">Octave</a> (un clone de Matlab), Javascript</dd>

                    <dt>Programmation Unix</dt>
                    <dd>
                        <a href="http://fr.wikipedia.org/wiki/Appel_système">appels systèmes</a> Unix/Linux en C et
                        création de paquets <a href="http://fr.wikipedia.org/wiki/Debian">Debian</a>
                    </dd>

                    <dt>Bibliothèques de programmation scientifique</dt>
                    <dd>
                        bibliothèques de calcul scientifique <a href="http://www.gnu.org/software/gsl/">GSL (GNU Scientific Library)</a> (C) et <a href="http://www.scipy.org/">Scipy</a> (Python),
                        bibliothèque de programmation mathématique <a href="https://www.gnu.org/software/glpk/">GLPK (GNU Linear Programming Kit)</a> (programmation linéaire et programmation en nombre entiers),
                        bibliothèques d'algèbre linéaire <a href="http://eigen.tuxfamily.org">Eigen</a> (C++) et <a href="http://www.numpy.org/">Numpy</a> (Python),
                        bibliothèques de visualisation de fonctions et de données scientifiques <a href="http://matplotlib.org/">Matplotlib</a> (Python) et <a href="http://www.gnuplot.info/">Gnuplot</a>,
                        bibliothèque de visualisation de données scientifiques en 3D <a href="http://code.enthought.com/projects/mayavi/">Mayavi</a>
                    </dd>
                    
                    <dt>Calcul parallèle et calcul haute performance</dt>
                    <dd>
                        bibliothèque de programmation parallèle en mémoire distribuée <a href="http://en.wikipedia.org/wiki/Message_Passing_Interface">MPI (Message Passing Interface)</a> et
                        bibliothèque de programmation parallèle en mémoire partagée <a href="http://openmp.org">OpenMP</a>
                    </dd>
                    
                    <dt>Bibliothèques de traitement d'images</dt>
                    <dd>
                        bibliothèque de traitement d'images et de reconnaissance de formes <a href="http://opencv.org/">OpenCV</a> (C/C++ et Python) et
                        bibliothèque de traitement d'images <a href="http://www.pythonware.com/products/pil/">PIL</a> (Python Imaging Library)
                    </dd>
                    

                    <dt>API généralistes</dt>
                    <dd>
                        bibliothèques généralistes <a href="http://www.boost.org/">Boost</a> (C++)
                    </dd>
                    
                    <dt>Outils de programmation</dt>
                    <dd>
                        moteurs de production multi-langages <a href="http://www.gnu.org/software/make/">Gnu Make</a>,
                        <a href="http://www.cmake.org/">CMake</a> et
                        <a href="http://ant.apache.org/">Ant</a>
                    </dd>
                    
                    <dt>XML et développement web</dt>
                    <dd>
                        <a href="http://www.saxproject.org/">SAX</a> (Simple API for XML) pour Java, C++ et Python,
                        langages HTML5,
                        CSS,
                        XML,
                        DOM,
                        Xpath,
                        Xinclude,
                        Xquery,
                        SVG,
                        XSD (XML Schema)
                        et <a href="http://en.wikipedia.org/wiki/Extensible_Stylesheet_Language_Transformations">XSLT</a>
                    </dd>

                    <dt>Systèmes embarqués</dt>
                    <dd>
                        plate-formes <a href="http://www.android.com/">Android</a> (Google),
                        programmation de micro-contrôleurs <a href="http://www.atmel.com/products/microcontrollers/">Atmel AVR</a> (en C),
                        bibliothèques de manipulation des <a href="http://fr.wikipedia.org/wiki/General_Purpose_Input/Output">GPIO</a> du <a href="http://www.raspberrypi.org/documentation/usage/gpio/">Raspberry Pi</a>,
                        programmation sur <a href="http://www.arduino.cc/">Arduino</a>
                    </dd>

                    <dt>Bibliothèques d'interface graphiques</dt>
                    <dd>
                        bibliothèques d'interfaces graphiques <a href="http://www.gtk.org/">GTK+</a> (C et Python),
                        <a href="http://qt-project.org/">Qt</a> (C++ et Python),
                        <a href="http://docs.oracle.com/javase/6/docs/technotes/guides/swing/">Swing</a> (Java),
                        <a href="http://www.eclipse.org/swt/">SWT</a> (Standard Widget Toolkit) (Java) et 
                        <a href="https://docs.python.org/2/library/tkinter.html">TKinter</a> (Python)
                    </dd>
                    
                    <dt>Bibliothèques 2D, 3D et multimédia</dt>
                    <dd>
                        moteur physique (simulations mécaniques)  <a href="http://bulletphysics.org">Bullet</a>,
                        bibliothèque de rendu 3D <a href="http://www.openscenegraph.org/">Open Scene Graph</a>,
                        bibliothèque de rendu 2D <a href="http://cairographics.org/">Cairo</a> en C et Python,
                        bibliothèque multimédia <a href="https://www.libsdl.org/">SDL</a> (Simple DirectMedia Layer) en C et Python (<a href="http://www.pygame.org">Pygame</a>),
                        bibliothèque multimédia C++ <a href="http://www.sfml-dev.org">SFML</a>
                    </dd>
                    
                    <dt>Autres</dt>
                    <dd>
                        <a href="http://en.wikipedia.org/wiki/Software_design_pattern">Design patterns</a> en C++ et Java,
                        langage <a href="http://fr.wikipedia.org/wiki/LaTeX">LaTeX</a>,
                        outil de CAO <a href="http://www.openscad.org/">OpenScad</a>,
                        formats de fichier <a href="http://en.wikipedia.org/wiki/Dbm">DBM</a> et
                        <a href="http://en.wikipedia.org/wiki/JSON">JSON</a>,
                        <a href="https://docs.python.org/2/library/pickle.html">Pickle</a>,
                        ...
                    </dd>
                </dl>
            </desc>

            <repository type="github" url="http://github.com/jeremiedecock/snippets" />

            <download_sources url="https://github.com/jeremiedecock/snippets/archive/master.zip" />

            <picture filename="demos.png" thumbnail_filename="demos.png" />
        </item>
    </group>
    
    <!-- ############################################################ -->

    <group id="aiam">
        <label>
            Intelligence Artificielle et Mathématiques Appliquées
        </label>

        <item id="ai_framework_for_python" license="MIT">
            <label>Artificial Intelligence frameworks for Python</label>
            <desc>
                Plusieurs bibliothèques d'Intelligence Artificielle pour
                Python.
                Contient notamment une bibliothèque centrée sur la résolution de
                Processus Décisionnels Markoviens (PDM), une bibliothèque
                dédiée à l'apprentissage artificiel et une bibliothèque
                d'optimisation stochastique non-linéaire.
            </desc>

            <repository type="github" url="http://github.com/jeremiedecock/pyai" />
        </item>

        <item id="jwumpus" license="MIT">
            <label>JWumpus</label>
            <desc>
                JWumpus est un exemple d'utilisation de la plate-forme <a
                href="http://jade.tilab.com">Jade</a> et de l'algorithme de
                Q-Learning (apprentissage par renforcement) pour résoudre le
                problème du Wumpus (tel que présenté dans le livre "Intelligence
                Artificielle" de Russell et Norvig).  L'algorithme explore
                l'espace des états-actions jusqu'à la 2000e itération, après
                quoi il passe en mode exploitation.
            </desc>
            <debian_package filename="jwumpus_1.0-1_all.deb" arch="all" />
            <!-- http://git.tuxfamily.org/jwumpus/jwumpus.git/snapshot/jwumpus-master.zip -->
            <download_sources url="http://git.tuxfamily.org/jwumpus/jwumpus.git/refs/" />

            <repository url="git://git.tuxfamily.org/gitroot/jwumpus/jwumpus.git"
                        weburl="http://git.tuxfamily.org/jwumpus/jwumpus.git/tree/"
                        type="git" />
            <picture filename="jwumpus_1.png" thumbnail_filename="jwumpus_1.png" />
        </item>

        <item id="chef" license="MIT">
            <label>Chef</label>
            <desc>
                Chef est un exemple de projet multi-agents utilisant l'architecture
                <a href="http://en.wikipedia.org/wiki/Belief-Desire-Intention_software_model">BDI</a>
                (Belief Desire and Intention) et l'interprète
                <a href="http://jason.sourceforge.net/Jason/Description.html">Jason</a>.
            </desc>
            <repository type="github" url="http://github.com/jeremiedecock/chef" />
            <download_sources url="http://github.com/jeremiedecock/chef/releases" />
        </item>

        <item id="perceptron_php" license="MIT">
            <label>Perceptron simple</label>
            <desc>
                Ce script PHP sert uniquement à mieux comprendre les étapes de
                calcul conduisant à l'équilibre d'un réseau de neurones
                fonctionnant suivant le modèle du Perceptron. Il n'a pas d'autre
                intérêt que de servir de support pédagogique.
            </desc>
            <download_sources filename="perceptron_simple.zip" />
        </item>
    </group>

    <!-- ############################################################ -->

    <group id="robotics">
        <label>
            Robotique et Électronique Numérique
        </label>

        <item id="pyax12" license="MIT">
            <label>PyAX-12</label>
            <desc>
                PyAX-12 est une librairie qui permet de contrôler des
                servomoteurs <a
                href="http://www.robotis.com/xe/dynamixel_en">Dynamixel
                AX-12</a> directement depuis un ordinateur (via une brique <a
                href="http://www.robotis.com/xe/controller_en">USB2Dynamixel</a>).
                Elle peut être utilisée pour dépasser les limites des
                contrôleurs types <a
                href="http://www.robotis.com/xe/controller_en">CM-5</a> ou
                pour remplacer les logiciels propriétaires fournis par <a
                href="http://www.robotis.com">Robotis</a>. PyAX-12 est
                écrite en Python.
            </desc>
            <repository type="github" url="http://github.com/jeremiedecock/pyax12" />
            <download_sources url="http://github.com/jeremiedecock/pyax12/releases" />
            <!--
            <readthedocs url="http://pyax-12.readthedocs.org/" />
            <label>Online documentation</label>
            -->
            <picture filename="dynamixel_1.png" thumbnail_filename="dynamixel_1.png" />
        </item>
        
        <item id="vor12" license="MIT">
            <label>VoR12</label>
            <desc>
                Le projet VoR12 est une caméra mobile qui utilise deux servomoteurs
                <a href="http://support.robotis.com/en/product/dynamixel/ax_series/dxl_ax_actuator.htm">Dynamixel
                AX-12</a> et la bibliothèque de traitement d'image <a href="http://opencv.org/">OpenCV</a>
                pour effectuer des expériences de suivi d'objets.
            </desc>
            <repository type="github" url="http://github.com/jeremiedecock/vor12" />
            <download_sources url="http://github.com/jeremiedecock/vor12/releases" />
            <!--
            <link url="http://vor12.readthedocs.org">
                <label>Online documentation</label>
            </link>
            -->
            <picture filename="vor12-2.jpeg" thumbnail_filename="vor12-2.png" />
        </item>
        
        <item id="libdynamixel" license="MIT">
            <label>LibDynamixel</label>
            <desc>
                LibDynamixel est une librairie qui permet de contrôler des
                servomoteurs <a
                href="http://www.robotis.com/xe/dynamixel_en">Dynamixel
                AX-12</a> directement depuis un ordinateur (via une brique <a
                href="http://www.robotis.com/xe/controller_en">USB2Dynamixel</a>).
                Elle peut être utilisée pour dépasser les limites des
                contrôleurs types <a
                href="http://www.robotis.com/xe/controller_en">CM-5</a> ou
                pour remplacer les logiciels propriétaires fournis par <a
                href="http://www.robotis.com">Robotis</a>.  LibDynamixel est
                écrit en C et fonctionne sur les systèmes Gnu/Linux.
            </desc>
            <download_sources url="http://git.tuxfamily.org/robotics/libdynamixel.git/refs/" />

            <repository url="git://git.tuxfamily.org/gitroot/robotics/libdynamixel.git"
                        weburl="http://git.tuxfamily.org/robotics/libdynamixel.git/tree/"
                        type="git" />
            <picture filename="dynamixel_1.png" thumbnail_filename="dynamixel_1.png" />
        </item>

        <item id="dtools" license="MIT">
            <label>Dtools</label>
            <desc>
                Un ensemble d'outils pour faciliter le contrôle des servomoteurs
                <a href="http://www.robotis.com/xe/dynamixel_en">Dynamixel AX-12</a>.
            </desc>
            <repository type="github" url="http://github.com/jeremiedecock/dtools" />
            <download_sources url="http://github.com/jeremiedecock/dtools/releases" />
        </item>

        <item id="bioloid" license="MIT">
            <label>Bioloid</label>
            <desc>
                Quelques exemples d'utilisation de la
                <a href="projects_fr.html#libdynamixel">libdynamixel</a>
                pour contrôler un
                <a href="http://www.robotis.com/xe/bioloid_en">bioloid</a>.
            </desc>
            <download_sources url="http://git.tuxfamily.org/robotics/bioloid.git/refs/" />

            <repository url="git://git.tuxfamily.org/gitroot/robotics/bioloid.git"
                        weburl="http://git.tuxfamily.org/robotics/bioloid.git/tree/"
                        type="git" />
            <video filename="bioloid_quadrupedal_static.ogv" thumbnail_filename="bioloid_quadrupedal_static.png">
                <link url="http://www.youtube.com/watch?v=8jDYKBuRWvg">
                    <label>Regarder sur Youtube</label>
                </link>
            </video>
            <!--
            <video filename="bioloid_quadrupedal_dynamic_1.ogv" thumbnail_filename="bioloid_quadrupedal_dynamic_1.png">
                <link url="http://www.youtube.com/watch?v=48PtL3mXUNU">
                    <label>Regarder sur Youtube</label>
                </link>
            </video>
            <video filename="bioloid_quadrupedal_dynamic_2.ogv" thumbnail_filename="bioloid_quadrupedal_dynamic_2.png">
                <link url="http://www.youtube.com/watch?v=S4RQAeOc79E">
                    <label>Regarder sur Youtube</label>
                </link>
            </video>
            -->
        </item>
    </group>

    <!-- ############################################################ -->

    <group id="util">
        <label>
            Utilitaires
        </label>

        <item id="pydfm" license="MIT">
            <label>PyDuplicateFileManager</label>
            <desc>
                PyDuplicateFileManager recherche les fichiers et les
                répertoires dupliqués dans une arborescence.
            </desc>
            <repository type="github" url="http://github.com/jeremiedecock/pydfm" />
        </item>

        <item id="dspp" license="MIT">
            <label>DSPP (Dual Screen PDF Presenter)</label>
            <desc>
                DSPP est un logiciel de présentation (comme Microsoft
                PowerPoint, Libre Office Impress et Apple Keynote).
                Il permet de présenter des fichiers PDF sur plusieurs écrans.

                Tout comme le logiciel Keynote d'Apple, DSPP exploite les
                configurations multi-écrans pour fournir des métadonnées à
                l'orateur.

                Il peut ainsi afficher la présentation à destination de
                l'auditoire sur un écran (généralement un vidéo projecteur) et
                des notes personnelles pour le locuteur sur un autre écran
                (généralement l'écran d'un ordinateur portable utilisé pour
                faire la présentation).

                DSPP est écrit en Python et distribué selon la licence MIT.
            </desc>
            <repository type="github" url="http://github.com/jeremiedecock/dspp" />
            <download_sources url="http://github.com/jeremiedecock/dspp/releases" />
        </item>

        <!--
        <item id="binviewer" license="MIT">
            <label>Binviewer</label>
            <desc>
                Donne une représentation graphique d'un fichier binaire
                (disque, partition, image ISO, exécutable, ...). Ce
                programme sert notamment à l'analyse de partitions chiffrées.
                Il permet également de voir la structure d'un système de
                fichier.
            </desc>
            <debian_package filename="binviewer_0.2-1_all.deb" arch="all" />
            <download_sources url="http://git.tuxfamily.org/systools/binviewer.git/refs/" />

            <repository url="git://git.tuxfamily.org/gitroot/systools/binviewer.git"
                        weburl="http://git.tuxfamily.org/systools/binviewer.git/tree/"
                        type="git" />
            <picture filename="binviewer_1.png" thumbnail_filename="binviewer_1.png" />
        </item>
        -->

        <item id="latex2png" license="MIT">
            <label>Latex2png</label>
            <desc>
                Convertit des fichiers latex en images PNG (permet par
                exemple d'exporter une formule mathématique isolée en image).
            </desc>

            <repository type="github" url="http://github.com/jeremiedecock/latex2png" />
            <download_sources url="http://github.com/jeremiedecock/latex2png/releases" />
            <debian_package filename="latex2png_1.0-1_all.deb" arch="all" />

            <picture filename="latex2png_2.png" thumbnail_filename="latex2png_2.png" />
        </item>
    </group>

    <!-- ############################################################ -->

    <group id="misc">
        <label>
            Divers
        </label>

        <item id="jdhpcad" license="CC BY-SA">
            <label>Objets 3D</label>
            <desc>
                Une collection de plans de conception d'objets imprimables en 3 dimensions (réalisés avec  <a href="http://www.openscad.org/">OpenSCAD</a>).
            </desc>
            <download_sources url="http://git.tuxfamily.org/jdhpcad/jdhpcad.git/snapshot/jdhpcad-master.zip" />

            <repository url="git://git.tuxfamily.org/gitroot/jdhpcad/jdhpcad.git"
                        weburl="http://git.tuxfamily.org/jdhpcad/jdhpcad.git/tree/"
                        type="git" />

            <picture filename="scad.png" thumbnail_filename="scad.png" />
        </item>

        <item id="jdhppcb" license="CC BY-SA">
            <label>Circuits Imprimés</label>
            <desc>
                Une collection de plans de conception de circuits imprimés prêts à être fabriqués (réalisés avec <a href="http://www.kicad-pcb.org">KiCad</a>).
            </desc>
            <download_sources url="http://git.tuxfamily.org/jdhppcb/jdhppcb.git/snapshot/jdhppcb-master.zip" />
            <repository url="git://git.tuxfamily.org/gitroot/jdhppcb/jdhppcb.git"
                        weburl="http://git.tuxfamily.org/jdhppcb/jdhppcb.git/tree/"
                        type="git" />
            <picture filename="pcb.png" thumbnail_filename="pcb.png" />
        </item>

        <item id="pypong" license="MIT">
            <label>PyPong</label>
            <desc>
                PyPong est un clone du célèbre Pong. Ce jeu est écrit en
                <a href="http://www.python.org/">Python</a> et utilise les
                modules <a href="http://www.pygame.org/">PyGame</a>.
            </desc>
            <download_sources url="http://git.tuxfamily.org/pygames/pypong.git/refs/" />
            <repository url="git://git.tuxfamily.org/gitroot/pygames/pypong.git"
                        weburl="http://git.tuxfamily.org/pygames/pypong.git/tree/"
                        type="git" />
            <picture filename="pypong.png" thumbnail_filename="pypong.png" />
        </item>

        <item id="jdhp" license="CC BY-SA">
            <label>JDHP</label>
            <desc>
                Le code source et les scripts de compilation du site jdhp.org (écrit en XML/XSLT/CSS).
            </desc>
            <repository type="github" url="http://github.com/jdhp-misc/www-jdhp-org" />
        </item>

        <item id="unmentioned">
            <label>Autres projets non répertoriés</label>
            <desc>
                De nombreux autres projets sont disponibles sur mon <a href="https://github.com/jeremiedecock?tab=repositories">compte github</a> !
            </desc>
        </item>

    </group>

</page>
